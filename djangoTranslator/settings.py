"""
Django settings for djangoTranslator project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_ENV') == 'development'

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'admin_numeric_filter',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'nested_inline',
    'admin_auto_filters',
    'translate'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoTranslator.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoTranslator.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Toronto'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000_000  # higher than the count of fields

CRONJOBS = [
    # Cron jobs for string translation
    ('*/10 * * * *', 'translate.crons.fetcher.update_translation_strings'),
    ('*/15 * * *', 'translate.crons.translator.translate_all_strings'),
    ('* 5 * * *', 'translate.crons.updator.create_pull_request_for_strings'),
    # Cron jobs for enum translation
    ('*/2 * * * *', 'translate.crons.backend.update_enums_in_db'),
    ('*/5 * * * *', 'translate.crons.translator.translate_all_enums'),
    ('1 */1 * * *', 'translate.crons.updator.create_pull_request_for_enums'),
]


GIT_URL = os.environ.get('GIT_URL')


# create pull request configs
BITBUCKET_URL = os.environ.get('BITBUCKET_URL')
BITBUCKET_USERNAME = os.environ.get('BITBUCKET_USERNAME')
BITBUCKET_PASSWORD = os.environ.get('BITBUCKET_PASSWORD')

# config for backend enums

BACKEND_BASE_URL = os.environ.get('BACKEND_BASE_URL')
BACKEND_AUTHORIZATION = os.environ.get('BACKEND_AUTHORIZATION')
BACKEND_USERNAME = os.environ.get('BACKEND_USERNAME')
BACKEND_PASSWORD = os.environ.get('BACKEND_PASSWORD')
